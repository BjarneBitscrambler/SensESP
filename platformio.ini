; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;set default_envs to whichever board(s) you use. Build/Run/etc processes those envs
default_envs = 
;   d1_mini
;   esp32dev
    esp-wrover-kit

; Global data for all [env:***]
[env]
framework = arduino
monitor_speed = 115200
;lib_deps =
;   https://github.com/SignalK/SensESP.git

; Un-comment the following if you get an error about [-Werror=reorder]
build_unflags = -Werror=reorder

; Un-comment the following if you get an error about
; insufficient memory after compiling and linking:
board_build.partitions = no_ota.csv

; Un-comment the following if you want more 
; details about runtime errors:
monitor_filters = esp32_exception_decoder

[env:d1_mini]
platform = espressif8266
board = d1_mini
board_build.f_cpu = 160000000L
upload_resetmethod = nodemcu
build_flags =
   -Wl,-Teagle.flash.4m1m.ld
   -Wall
   -Wno-reorder
upload_speed = 460800   
extra_scripts = extra_script.py

[env:esp32dev]
platform = espressif32
board = esp32dev

[env:esp-wrover-kit]
platform = espressif32
board = esp-wrover-kit
upload_speed = 460800
;lib_deps =
;	ArduinoJson@^5.13.4;
;	ReactESP
;    https://github.com/SignalK/SensESP.git
;following built-in ESP32 libraries are listed here, as otherwise get compiler errors about not
;finding the associated *.h files. 
;Alternative is to #include <*.h> each file in main.cpp
;Another alternative is to set include paths for the libraries (build_flags = -Ipath/to/lib)
;Another alternative may be to list them in the library.json file
;For more info see:
;//https://community.platformio.org/t/espressif32-stage-and-arduino-wificlientsecure-missing/2331
;//https://community.platformio.org/t/errors-when-compiling-esp32-code/11421/3
;    FS
;    SPIFFS
;    WiFi
;    WiFiClientSecure
;    SPI
;    ESPmDNS
;    ArduinoOTA
;    Update
;    HTTPClient
;    Adafruit AHRS
    
